@use "_nullstyle.scss" as c;
//основной файл без _ в имени , и он будет пересоздаваться

$textSelection: #10f110;
$textColor: #000;
$whPx : 80px;
/*переменные*/
$page: 12;
$font-size: ("small":10px, "normal": 20px, "large": 40px);

%message {
    /*шаблон*/
    border: 1px solid rgb(0, 0, 0);
    padding: 10px;
    color: red;
}

header {
    text-align: center;
    min-height: 40px;
    background-color: c.$primary-color;

    p {
        font-family: 'Courier New', Courier, monospace;
        font-size: 16px;
        color: $textColor;

        &:hover {
            color: $textSelection;
            font-size: 25px;
        }
    }
}

@mixin wh {
    /*миксины*/
    width: $whPx;
    height: $whPx;
    /*использование переменных*/
}

.num:hover {
    content: "Страница #{ $page }!";
    /*сложнеие строк конструкция */
}

/*вложенность*/
.container {
    padding: 15px;
    justify-content: center;
    width: 600px / 960px * 100%;

    /*Математические операторы*/
    .flex_container {
        justify-content: center;
        display: flex;
        flex-direction: row;
        text-align: center;
        gap: 20px;

        
        &+p {/*после flex_container p будет с таким фоном*/
            background-color: rgb(190, 220, 0);
        }
        .item {
            @extend %message;
            @include wh;
            background: darken(#cceccc, 20);/*встроенный модуль color*/
            
        }

        .item_1 {
            @extend.item;
            background-color: rgb(83, 73, 73);
        }


        p {
            color: rgb(54, 11, 128);
            font-size: map-get($font-size, $key: "large");/*встроенный модуль map*/
        }
    }

    .flex_container_1 {
        @extend.flex_container;

        .item {
            background-color: aquamarine;
        }

        &>div {
            @include wh;
            background-color: rgb(242, 255, 127);
        }

    }
}